# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Django Project

on:
  push:
    branches: [ main, dev ]
  pull_request:

env:
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: github_actions
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  DEPLOY: TESTING

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install system packages
      run: |
        sudo apt install python-dev libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        #pip install flake8 pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        poetry install
    - name: Lint with flake8-black
      run: |
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        poetry run flake8
    - name: Run tests
      run: |
        #pytest
        poetry run python manage.py test
